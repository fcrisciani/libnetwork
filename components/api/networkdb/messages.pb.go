// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

/*
Package networkdb is a generated protocol buffer package.

It is generated from these files:
	messages.proto
	rpcif.proto

It has these top-level messages:
	Result
	Configuration
	ClusterState
	Group
	Table
	TableEntry
	Entry
	EntryList
	PeerList
	Peer
	TableEvent
*/
package networkdb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OperationResult int32

const (
	OperationResult_SUCCESS OperationResult = 0
	OperationResult_FAIL    OperationResult = 1
)

var OperationResult_name = map[int32]string{
	0: "SUCCESS",
	1: "FAIL",
}
var OperationResult_value = map[string]int32{
	"SUCCESS": 0,
	"FAIL":    1,
}

func (x OperationResult) String() string {
	return proto.EnumName(OperationResult_name, int32(x))
}
func (OperationResult) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type State int32

const (
	// healthy state, everything looks good
	State_HEALTHY State = 0
	// experiencing some failure, performance is degradated but not unrecoverable
	State_TRANSIENT_FAILURE State = 1
	// criticl condition, the functionality is compromised
	State_FAILED State = 2
	// waiting for initialization
	State_NOT_INITIALIZED State = 3
)

var State_name = map[int32]string{
	0: "HEALTHY",
	1: "TRANSIENT_FAILURE",
	2: "FAILED",
	3: "NOT_INITIALIZED",
}
var State_value = map[string]int32{
	"HEALTHY":           0,
	"TRANSIENT_FAILURE": 1,
	"FAILED":            2,
	"NOT_INITIALIZED":   3,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type TableOperation int32

const (
	TableOperation_CREATE TableOperation = 0
	TableOperation_UPDATE TableOperation = 1
	TableOperation_DELETE TableOperation = 2
)

var TableOperation_name = map[int32]string{
	0: "CREATE",
	1: "UPDATE",
	2: "DELETE",
}
var TableOperation_value = map[string]int32{
	"CREATE": 0,
	"UPDATE": 1,
	"DELETE": 2,
}

func (x TableOperation) String() string {
	return proto.EnumName(TableOperation_name, int32(x))
}
func (TableOperation) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Result struct {
	Status OperationResult `protobuf:"varint,1,opt,name=status,enum=networkdb.OperationResult" json:"status,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Result) GetStatus() OperationResult {
	if m != nil {
		return m.Status
	}
	return OperationResult_SUCCESS
}

type Configuration struct {
	// nodeName is the cluster wide unique name for this node.
	NodeName string `protobuf:"bytes,1,opt,name=nodeName" json:"nodeName,omitempty"`
	// bindAddr is the IP on which networkdb listens.
	BindAddr string `protobuf:"bytes,2,opt,name=bindAddr" json:"bindAddr,omitempty"`
	// bindPort is the local node's port to which we bind to for cluster communication.
	BindPort int32 `protobuf:"varint,3,opt,name=bindPort" json:"bindPort,omitempty"`
	// keys to be added to the Keyring of the memberlist. Key at index
	// 0 is the primary key
	Keys [][]byte `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (m *Configuration) Reset()                    { *m = Configuration{} }
func (m *Configuration) String() string            { return proto.CompactTextString(m) }
func (*Configuration) ProtoMessage()               {}
func (*Configuration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Configuration) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *Configuration) GetBindAddr() string {
	if m != nil {
		return m.BindAddr
	}
	return ""
}

func (m *Configuration) GetBindPort() int32 {
	if m != nil {
		return m.BindPort
	}
	return 0
}

func (m *Configuration) GetKeys() [][]byte {
	if m != nil {
		return m.Keys
	}
	return nil
}

type ClusterState struct {
	Status State `protobuf:"varint,1,opt,name=status,enum=networkdb.State" json:"status,omitempty"`
}

func (m *ClusterState) Reset()                    { *m = ClusterState{} }
func (m *ClusterState) String() string            { return proto.CompactTextString(m) }
func (*ClusterState) ProtoMessage()               {}
func (*ClusterState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ClusterState) GetStatus() State {
	if m != nil {
		return m.Status
	}
	return State_HEALTHY
}

type Group struct {
	GroupName string `protobuf:"bytes,1,opt,name=groupName" json:"groupName,omitempty"`
}

func (m *Group) Reset()                    { *m = Group{} }
func (m *Group) String() string            { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()               {}
func (*Group) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Group) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

type Table struct {
	Group     *Group `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	TableName string `protobuf:"bytes,2,opt,name=tableName" json:"tableName,omitempty"`
}

func (m *Table) Reset()                    { *m = Table{} }
func (m *Table) String() string            { return proto.CompactTextString(m) }
func (*Table) ProtoMessage()               {}
func (*Table) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Table) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *Table) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

type TableEntry struct {
	Table *Table `protobuf:"bytes,1,opt,name=table" json:"table,omitempty"`
	Entry *Entry `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
}

func (m *TableEntry) Reset()                    { *m = TableEntry{} }
func (m *TableEntry) String() string            { return proto.CompactTextString(m) }
func (*TableEntry) ProtoMessage()               {}
func (*TableEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TableEntry) GetTable() *Table {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *TableEntry) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type Entry struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Entry) Reset()                    { *m = Entry{} }
func (m *Entry) String() string            { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()               {}
func (*Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Entry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Entry) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type EntryList struct {
	Table *Table   `protobuf:"bytes,1,opt,name=table" json:"table,omitempty"`
	List  []*Entry `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *EntryList) Reset()                    { *m = EntryList{} }
func (m *EntryList) String() string            { return proto.CompactTextString(m) }
func (*EntryList) ProtoMessage()               {}
func (*EntryList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *EntryList) GetTable() *Table {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *EntryList) GetList() []*Entry {
	if m != nil {
		return m.List
	}
	return nil
}

type PeerList struct {
	Peers []*Peer `protobuf:"bytes,1,rep,name=peers" json:"peers,omitempty"`
}

func (m *PeerList) Reset()                    { *m = PeerList{} }
func (m *PeerList) String() string            { return proto.CompactTextString(m) }
func (*PeerList) ProtoMessage()               {}
func (*PeerList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PeerList) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

type Peer struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Ip   string `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
}

func (m *Peer) Reset()                    { *m = Peer{} }
func (m *Peer) String() string            { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()               {}
func (*Peer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Peer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Peer) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type TableEvent struct {
	Operation TableOperation `protobuf:"varint,1,opt,name=operation,enum=networkdb.TableOperation" json:"operation,omitempty"`
	Table     *Table         `protobuf:"bytes,2,opt,name=table" json:"table,omitempty"`
	Entry     *Entry         `protobuf:"bytes,3,opt,name=entry" json:"entry,omitempty"`
}

func (m *TableEvent) Reset()                    { *m = TableEvent{} }
func (m *TableEvent) String() string            { return proto.CompactTextString(m) }
func (*TableEvent) ProtoMessage()               {}
func (*TableEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *TableEvent) GetOperation() TableOperation {
	if m != nil {
		return m.Operation
	}
	return TableOperation_CREATE
}

func (m *TableEvent) GetTable() *Table {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *TableEvent) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func init() {
	proto.RegisterType((*Result)(nil), "networkdb.Result")
	proto.RegisterType((*Configuration)(nil), "networkdb.Configuration")
	proto.RegisterType((*ClusterState)(nil), "networkdb.ClusterState")
	proto.RegisterType((*Group)(nil), "networkdb.Group")
	proto.RegisterType((*Table)(nil), "networkdb.Table")
	proto.RegisterType((*TableEntry)(nil), "networkdb.TableEntry")
	proto.RegisterType((*Entry)(nil), "networkdb.Entry")
	proto.RegisterType((*EntryList)(nil), "networkdb.EntryList")
	proto.RegisterType((*PeerList)(nil), "networkdb.PeerList")
	proto.RegisterType((*Peer)(nil), "networkdb.Peer")
	proto.RegisterType((*TableEvent)(nil), "networkdb.TableEvent")
	proto.RegisterEnum("networkdb.OperationResult", OperationResult_name, OperationResult_value)
	proto.RegisterEnum("networkdb.State", State_name, State_value)
	proto.RegisterEnum("networkdb.TableOperation", TableOperation_name, TableOperation_value)
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xd1, 0x8a, 0xda, 0x40,
	0x14, 0x35, 0x89, 0x71, 0xf5, 0x6a, 0x35, 0x9d, 0xb6, 0x60, 0x97, 0x3e, 0x48, 0xe8, 0x16, 0xf1,
	0xc1, 0xd2, 0x6d, 0xa1, 0x7d, 0xe8, 0x4b, 0xd0, 0x69, 0x37, 0x90, 0xba, 0x32, 0xc6, 0x87, 0x2d,
	0x85, 0x25, 0xe2, 0x54, 0x82, 0xd9, 0x24, 0xcc, 0x4c, 0x76, 0xf1, 0x43, 0xfa, 0xbf, 0x65, 0x66,
	0xd4, 0xa8, 0x2c, 0xcb, 0xbe, 0xdd, 0x3b, 0xe7, 0xdc, 0xc3, 0xb9, 0x73, 0x26, 0x81, 0xf6, 0x1d,
	0xe5, 0x3c, 0x5a, 0x51, 0x3e, 0xcc, 0x59, 0x26, 0x32, 0xd4, 0x48, 0xa9, 0x78, 0xc8, 0xd8, 0x7a,
	0xb9, 0x70, 0xbf, 0x43, 0x8d, 0x50, 0x5e, 0x24, 0x02, 0x5d, 0x42, 0x8d, 0x8b, 0x48, 0x14, 0xbc,
	0x6b, 0xf4, 0x8c, 0x7e, 0xfb, 0xf2, 0x7c, 0xb8, 0x67, 0x0d, 0xaf, 0x73, 0xca, 0x22, 0x11, 0x67,
	0xa9, 0xe6, 0x92, 0x2d, 0xd3, 0x7d, 0x80, 0x17, 0xa3, 0x2c, 0xfd, 0x1b, 0xaf, 0x0a, 0x0d, 0xa3,
	0x73, 0xa8, 0xa7, 0xd9, 0x92, 0x4e, 0xa2, 0x3b, 0xaa, 0x64, 0x1a, 0x64, 0xdf, 0x4b, 0x6c, 0x11,
	0xa7, 0x4b, 0x6f, 0xb9, 0x64, 0x5d, 0x53, 0x63, 0xbb, 0x7e, 0x87, 0x4d, 0x33, 0x26, 0xba, 0x56,
	0xcf, 0xe8, 0xdb, 0x64, 0xdf, 0x23, 0x04, 0xd5, 0x35, 0xdd, 0xf0, 0x6e, 0xb5, 0x67, 0xf5, 0x5b,
	0x44, 0xd5, 0xee, 0x37, 0x68, 0x8d, 0x92, 0x82, 0x0b, 0xca, 0x66, 0x22, 0x12, 0x14, 0xf5, 0x4f,
	0xcc, 0x3b, 0x07, 0xe6, 0x15, 0x63, 0x6f, 0xf9, 0x02, 0xec, 0x9f, 0x2c, 0x2b, 0x72, 0xf4, 0x0e,
	0x1a, 0x2b, 0x59, 0x1c, 0x78, 0x2d, 0x0f, 0xdc, 0x5f, 0x60, 0x87, 0xd1, 0x22, 0xa1, 0xe8, 0x03,
	0xd8, 0xea, 0x54, 0x51, 0x9a, 0x47, 0xc2, 0x4a, 0x87, 0x68, 0x58, 0xca, 0x09, 0x39, 0xa0, 0xe4,
	0xf4, 0x7a, 0xe5, 0x81, 0xfb, 0x07, 0x40, 0xc9, 0xe1, 0x54, 0xb0, 0x8d, 0xd4, 0x54, 0xd0, 0x23,
	0x9a, 0x8a, 0x45, 0x34, 0x2c, 0x79, 0x54, 0x0e, 0x28, 0xbd, 0x63, 0x9e, 0x12, 0x22, 0x1a, 0x76,
	0x3f, 0x82, 0xad, 0x85, 0x1d, 0xb0, 0xd6, 0x74, 0xb3, 0xdd, 0x46, 0x96, 0xe8, 0x35, 0xd8, 0xf7,
	0x51, 0x52, 0x68, 0x4b, 0x2d, 0xa2, 0x1b, 0xf7, 0x06, 0x1a, 0x6a, 0x20, 0x88, 0xb9, 0x78, 0xb6,
	0x9b, 0xf7, 0x50, 0x4d, 0x62, 0x2e, 0xba, 0x66, 0xcf, 0x7a, 0xd4, 0x8c, 0x42, 0xdd, 0x4f, 0x50,
	0x9f, 0x52, 0xca, 0x94, 0xf2, 0x05, 0xd8, 0x39, 0xa5, 0x4c, 0x86, 0x22, 0x47, 0x3a, 0x07, 0x23,
	0x92, 0x43, 0x34, 0xea, 0x0e, 0xa0, 0x2a, 0x5b, 0x19, 0x74, 0x5a, 0x86, 0xa1, 0x6a, 0xd4, 0x06,
	0x33, 0xce, 0xb7, 0xf7, 0x69, 0xc6, 0xb9, 0xfb, 0xcf, 0xd8, 0xdd, 0xe4, 0x3d, 0x4d, 0x05, 0xfa,
	0x0a, 0x8d, 0x6c, 0xf7, 0x36, 0xb7, 0xd1, 0xbf, 0x3d, 0xf5, 0x5f, 0x3e, 0xde, 0x92, 0x5b, 0x2e,
	0x6d, 0x3e, 0x33, 0x02, 0xeb, 0xc9, 0x08, 0x06, 0x7d, 0xe8, 0x9c, 0x7c, 0x24, 0xa8, 0x09, 0x67,
	0xb3, 0xf9, 0x68, 0x84, 0x67, 0x33, 0xa7, 0x82, 0xea, 0x50, 0xfd, 0xe1, 0xf9, 0x81, 0x63, 0x0c,
	0x02, 0xb0, 0xf5, 0x9b, 0x6d, 0xc2, 0xd9, 0x15, 0xf6, 0x82, 0xf0, 0xea, 0xc6, 0xa9, 0xa0, 0x37,
	0xf0, 0x32, 0x24, 0xde, 0x64, 0xe6, 0xe3, 0x49, 0x78, 0x2b, 0x99, 0x73, 0x82, 0x1d, 0x03, 0x01,
	0xd4, 0x64, 0x83, 0xc7, 0x8e, 0x89, 0x5e, 0x41, 0x67, 0x72, 0x1d, 0xde, 0xfa, 0x13, 0x3f, 0xf4,
	0xbd, 0xc0, 0xff, 0x8d, 0xc7, 0x8e, 0x35, 0xf8, 0x02, 0xed, 0xe3, 0x25, 0xe5, 0xc8, 0x88, 0x60,
	0x2f, 0xc4, 0x4e, 0x45, 0xd6, 0xf3, 0xe9, 0x58, 0xd6, 0x4a, 0x6a, 0x8c, 0x03, 0x1c, 0x62, 0xc7,
	0x5c, 0xd4, 0xd4, 0x7f, 0xe0, 0xf3, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x32, 0x19, 0x7e, 0x0f,
	0x19, 0x04, 0x00, 0x00,
}
