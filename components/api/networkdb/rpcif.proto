// compile: protoc --go_out=plugins=grpc:components/api/networkdb/. -I components/api/networkdb components/api/networkdb/*.proto

syntax = "proto3";

package networkdb;

import "google/protobuf/empty.proto";
import "messages.proto";

service ConfigurationManagement {
  // Component initialization
  rpc Initialize (Configuration) returns (Result) {}
}

service ClusterManagement {
  // Cluster related operations
  rpc StateCluster (google.protobuf.Empty) returns (ClusterState) {}
  rpc JoinCluster (PeerList) returns (Result) {}
  rpc LeaveCluster (google.protobuf.Empty) returns (Result) {}
  rpc PeersCluster (google.protobuf.Empty) returns (PeerList) {}
  // TODO fcrisciani rpc WatchStateCluster() (stream ClusterState) {}
}

// Interface exported by the server.
service GroupManagement {
  // // Group operations
  rpc JoinGroup (Group) returns (Result) {}
  rpc LeaveGroup (Group) returns (Result) {}
  rpc PeersGroup (Group) returns (PeerList) {}
  // TODO fcrisciani rpc ListGroup (Group) returns (Result) {}
}

service EntryManagement {
  // Entry operations
  rpc CreateEntryRpc (TableEntry) returns (Result) {}
  rpc ReadEntryRpc (TableEntry) returns (TableEntry) {}
  rpc UpdateEntryRpc (TableEntry) returns (Result) {}
  rpc DeleteEntryRpc (TableEntry) returns (Result) {}

  // Table operations
  rpc ReadTable (Table) returns (EntryList) {}
  rpc WatchTable (Table) returns (stream TableEvent) {}
}

service DiagnoseManagement {
  rpc Ready (google.protobuf.Empty) returns (Result) {}
}
