// compile: protoc --go_out=networkdb/api/ -I networkdb/api networkdb/api/messages.proto
syntax = "proto3";

package networkdb;

enum OperationResult {
  SUCCESS = 0;
  FAIL = 1;
}

message Result {
  OperationResult status = 1;
}

message Configuration {
  // nodeName is the cluster wide unique name for this node.
  string nodeName = 1;
  // bindAddr is the IP on which networkdb listens.
  string bindAddr = 2 ;
  // bindPort is the local node's port to which we bind to for cluster communication.
  int32 bindPort = 3;
  // keys to be added to the Keyring of the memberlist. Key at index
	// 0 is the primary key
  repeated bytes keys = 4;
}

enum State {
  // healthy state, everything looks good
  HEALTHY = 0;
  // experiencing some failure, performance is degradated but not unrecoverable
  TRANSIENT_FAILURE = 1;
  // criticl condition, the functionality is compromised
  FAILED = 2;
  // waiting for initialization
  NOT_INITIALIZED = 3;
}

message ClusterState {
  State status = 1;
}

message Group {
  string groupName = 1;
}

message Table {
  Group group = 1;
  string tableName = 2;
}

message TableEntry {
  Table table = 1;
  Entry entry = 2;
}

message Entry {
  string key = 1;
  bytes value = 2;
}

message EntryList {
  Table table = 1;
  repeated Entry list = 2;
}

message PeerList {
  repeated Peer peers = 1;
}

message Peer {
  string name = 1;
  string ip = 2;
}

enum TableOperation {
  CREATE = 0;
  UPDATE = 1;
  DELETE = 2;
}

message TableEvent {
  TableOperation operation = 1;
  Table table = 2;
  Entry entry = 3;
}
