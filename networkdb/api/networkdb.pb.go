// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/networkdb.proto

/*
Package networkdb is a generated protocol buffer package.

It is generated from these files:
	api/networkdb.proto

It has these top-level messages:
	Result
	Configuration
*/
package networkdb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OperationResult int32

const (
	OperationResult_SUCCESS OperationResult = 0
	OperationResult_FAIL    OperationResult = 1
)

var OperationResult_name = map[int32]string{
	0: "SUCCESS",
	1: "FAIL",
}
var OperationResult_value = map[string]int32{
	"SUCCESS": 0,
	"FAIL":    1,
}

func (x OperationResult) String() string {
	return proto.EnumName(OperationResult_name, int32(x))
}
func (OperationResult) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Result struct {
	Status OperationResult `protobuf:"varint,1,opt,name=status,enum=networkdb.OperationResult" json:"status,omitempty"`
	Error  string          `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Result) GetStatus() OperationResult {
	if m != nil {
		return m.Status
	}
	return OperationResult_SUCCESS
}

func (m *Result) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Configuration struct {
	// NodeName is the cluster wide unique name for this node.
	NodeName string `protobuf:"bytes,1,opt,name=NodeName" json:"NodeName,omitempty"`
	// BindAddr is the IP on which networkdb listens.
	BindAddr string `protobuf:"bytes,2,opt,name=BindAddr" json:"BindAddr,omitempty"`
	// BindPort is the local node's port to which we bind to for cluster communication.
	BindPort int32 `protobuf:"varint,3,opt,name=BindPort" json:"BindPort,omitempty"`
	// Keys to be added to the Keyring of the memberlist. Key at index
	// 0 is the primary key
	Keys [][]byte `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (m *Configuration) Reset()                    { *m = Configuration{} }
func (m *Configuration) String() string            { return proto.CompactTextString(m) }
func (*Configuration) ProtoMessage()               {}
func (*Configuration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Configuration) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *Configuration) GetBindAddr() string {
	if m != nil {
		return m.BindAddr
	}
	return ""
}

func (m *Configuration) GetBindPort() int32 {
	if m != nil {
		return m.BindPort
	}
	return 0
}

func (m *Configuration) GetKeys() [][]byte {
	if m != nil {
		return m.Keys
	}
	return nil
}

func init() {
	proto.RegisterType((*Result)(nil), "networkdb.Result")
	proto.RegisterType((*Configuration)(nil), "networkdb.Configuration")
	proto.RegisterEnum("networkdb.OperationResult", OperationResult_name, OperationResult_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NetworkDB service

type NetworkDBClient interface {
	// Component initialization
	Initialize(ctx context.Context, in *Configuration, opts ...grpc.CallOption) (*Result, error)
}

type networkDBClient struct {
	cc *grpc.ClientConn
}

func NewNetworkDBClient(cc *grpc.ClientConn) NetworkDBClient {
	return &networkDBClient{cc}
}

func (c *networkDBClient) Initialize(ctx context.Context, in *Configuration, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := grpc.Invoke(ctx, "/networkdb.NetworkDB/Initialize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NetworkDB service

type NetworkDBServer interface {
	// Component initialization
	Initialize(context.Context, *Configuration) (*Result, error)
}

func RegisterNetworkDBServer(s *grpc.Server, srv NetworkDBServer) {
	s.RegisterService(&_NetworkDB_serviceDesc, srv)
}

func _NetworkDB_Initialize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Configuration)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkDBServer).Initialize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/networkdb.NetworkDB/Initialize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkDBServer).Initialize(ctx, req.(*Configuration))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetworkDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "networkdb.NetworkDB",
	HandlerType: (*NetworkDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Initialize",
			Handler:    _NetworkDB_Initialize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/networkdb.proto",
}

func init() { proto.RegisterFile("api/networkdb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x4d, 0x4b, 0xc3, 0x30,
	0x18, 0xc7, 0x57, 0xd7, 0xd5, 0xf5, 0xf1, 0x6d, 0x3e, 0x7a, 0x08, 0x3d, 0x95, 0x9e, 0x82, 0x87,
	0x09, 0xf5, 0xe8, 0x69, 0xab, 0x8a, 0x03, 0xa9, 0x92, 0xe2, 0x07, 0xc8, 0x48, 0x94, 0xb0, 0x99,
	0x94, 0x34, 0x65, 0xe8, 0xa7, 0x17, 0x1b, 0x57, 0xe7, 0x6e, 0xf9, 0xe5, 0xff, 0x42, 0xfe, 0x81,
	0x0b, 0x5e, 0xab, 0x6b, 0x2d, 0xdd, 0xc6, 0xd8, 0x95, 0x58, 0x4e, 0x6b, 0x6b, 0x9c, 0xc1, 0xb8,
	0xbf, 0xc8, 0x18, 0x44, 0x4c, 0x36, 0xed, 0xda, 0x61, 0x0e, 0x51, 0xe3, 0xb8, 0x6b, 0x1b, 0x12,
	0xa4, 0x01, 0x3d, 0xcd, 0x93, 0xe9, 0x5f, 0xec, 0xb9, 0x96, 0x96, 0x3b, 0x65, 0xb4, 0xf7, 0xb2,
	0x5f, 0x27, 0x5e, 0xc2, 0x48, 0x5a, 0x6b, 0x2c, 0x39, 0x48, 0x03, 0x1a, 0x33, 0x0f, 0xd9, 0x06,
	0x4e, 0x0a, 0xa3, 0xdf, 0xd4, 0x7b, 0xeb, 0x43, 0x98, 0xc0, 0xb8, 0x34, 0x42, 0x96, 0xfc, 0x43,
	0x76, 0xe5, 0x31, 0xeb, 0xf9, 0x47, 0x9b, 0x2b, 0x2d, 0x66, 0x42, 0x6c, 0x5b, 0x7a, 0xde, 0x6a,
	0x2f, 0xc6, 0x3a, 0x32, 0x4c, 0x03, 0x3a, 0x62, 0x3d, 0x23, 0x42, 0xb8, 0x92, 0x9f, 0x0d, 0x09,
	0xd3, 0x21, 0x3d, 0x66, 0xdd, 0xf9, 0x8a, 0xc2, 0xd9, 0xde, 0x4b, 0xf1, 0x08, 0x0e, 0xab, 0xd7,
	0xa2, 0xb8, 0xaf, 0xaa, 0xc9, 0x00, 0xc7, 0x10, 0x3e, 0xcc, 0x16, 0x4f, 0x93, 0x20, 0x7f, 0x84,
	0xb8, 0xf4, 0xeb, 0xee, 0xe6, 0x78, 0x0b, 0xb0, 0xd0, 0xca, 0x29, 0xbe, 0x56, 0x5f, 0x12, 0xc9,
	0xce, 0xee, 0x7f, 0x33, 0x92, 0xf3, 0x1d, 0xc5, 0xd7, 0x67, 0x83, 0x65, 0xd4, 0x7d, 0xe9, 0xcd,
	0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x19, 0x10, 0x4b, 0x69, 0x01, 0x00, 0x00,
}
